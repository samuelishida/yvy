version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongo_data:/data/db  # Volume local para garantir persistÃªncia
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'


  backend:
    build: ./backend
    container_name: backend
    environment:
      - MONGO_URI=mongodb://root:example@mongo:27017/
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - mongo
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0'


networks:
  app-network:
    driver: bridge